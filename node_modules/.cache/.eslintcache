[{"/home/shivam/Desktop/netflix-gpt/src/index.js":"1","/home/shivam/Desktop/netflix-gpt/src/App.js":"2","/home/shivam/Desktop/netflix-gpt/src/reportWebVitals.js":"3","/home/shivam/Desktop/netflix-gpt/src/utils/appStore.js":"4","/home/shivam/Desktop/netflix-gpt/src/components/Body.js":"5","/home/shivam/Desktop/netflix-gpt/src/utils/userSlice.js":"6","/home/shivam/Desktop/netflix-gpt/src/components/Login.js":"7","/home/shivam/Desktop/netflix-gpt/src/components/Browse.js":"8","/home/shivam/Desktop/netflix-gpt/src/utils/Firebase.js":"9","/home/shivam/Desktop/netflix-gpt/src/components/Header.js":"10","/home/shivam/Desktop/netflix-gpt/src/utils/Validate.js":"11","/home/shivam/Desktop/netflix-gpt/src/utils/constants.js":"12","/home/shivam/Desktop/netflix-gpt/src/utils/moviesSlice.js":"13","/home/shivam/Desktop/netflix-gpt/src/components/MainContainer.js":"14","/home/shivam/Desktop/netflix-gpt/src/components/SecondaryContainer.js":"15","/home/shivam/Desktop/netflix-gpt/src/components/VideoTitle.js":"16","/home/shivam/Desktop/netflix-gpt/src/components/VideoBackground.js":"17","/home/shivam/Desktop/netflix-gpt/src/CustomHooks/useTrailerVideo.js":"18","/home/shivam/Desktop/netflix-gpt/src/components/MovieList.js":"19","/home/shivam/Desktop/netflix-gpt/src/components/MovieCard.js":"20","/home/shivam/Desktop/netflix-gpt/src/CustomHooks/usePopularMovies.js":"21","/home/shivam/Desktop/netflix-gpt/src/CustomHooks/useAddPlayingMovies.js":"22","/home/shivam/Desktop/netflix-gpt/src/components/GPT_Search.js":"23","/home/shivam/Desktop/netflix-gpt/src/utils/gptSearch.js":"24","/home/shivam/Desktop/netflix-gpt/src/components/GptSearchBar.js":"25","/home/shivam/Desktop/netflix-gpt/src/components/GptMovieSuggestion.js":"26","/home/shivam/Desktop/netflix-gpt/src/utils/constantLanguage.js":"27","/home/shivam/Desktop/netflix-gpt/src/utils/configSlice.js":"28","/home/shivam/Desktop/netflix-gpt/src/utils/openai.js":"29","/home/shivam/Desktop/netflix-gpt/src/components/ErrorPage.js":"30"},{"size":535,"mtime":1701290716390,"results":"31","hashOfConfig":"32"},{"size":269,"mtime":1700713083453,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":1698853682976,"results":"34","hashOfConfig":"32"},{"size":426,"mtime":1705340465979,"results":"35","hashOfConfig":"32"},{"size":731,"mtime":1708515534854,"results":"36","hashOfConfig":"32"},{"size":392,"mtime":1700712228276,"results":"37","hashOfConfig":"32"},{"size":5582,"mtime":1708515486800,"results":"38","hashOfConfig":"32"},{"size":992,"mtime":1705559795857,"results":"39","hashOfConfig":"32"},{"size":891,"mtime":1700540456584,"results":"40","hashOfConfig":"32"},{"size":2864,"mtime":1702921788638,"results":"41","hashOfConfig":"32"},{"size":450,"mtime":1705495259626,"results":"42","hashOfConfig":"32"},{"size":1267,"mtime":1708401004227,"results":"43","hashOfConfig":"32"},{"size":688,"mtime":1702318659939,"results":"44","hashOfConfig":"32"},{"size":620,"mtime":1705560455636,"results":"45","hashOfConfig":"32"},{"size":801,"mtime":1702910938068,"results":"46","hashOfConfig":"32"},{"size":704,"mtime":1702919567217,"results":"47","hashOfConfig":"32"},{"size":898,"mtime":1705560710571,"results":"48","hashOfConfig":"32"},{"size":1170,"mtime":1708410318337,"results":"49","hashOfConfig":"32"},{"size":597,"mtime":1708401903824,"results":"50","hashOfConfig":"32"},{"size":294,"mtime":1702909236729,"results":"51","hashOfConfig":"32"},{"size":754,"mtime":1702807000298,"results":"52","hashOfConfig":"32"},{"size":768,"mtime":1705810647217,"results":"53","hashOfConfig":"32"},{"size":620,"mtime":1702900971522,"results":"54","hashOfConfig":"32"},{"size":664,"mtime":1708412884744,"results":"55","hashOfConfig":"32"},{"size":2697,"mtime":1708418080533,"results":"56","hashOfConfig":"32"},{"size":626,"mtime":1702822977911,"results":"57","hashOfConfig":"32"},{"size":556,"mtime":1702486605998,"results":"58","hashOfConfig":"32"},{"size":358,"mtime":1702487532348,"results":"59","hashOfConfig":"32"},{"size":231,"mtime":1705339906809,"results":"60","hashOfConfig":"32"},{"size":348,"mtime":1707071472612,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"17c4s1o",{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"65"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"65"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"65"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"65"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"65"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"65"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"142","usedDeprecatedRules":"65"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"65"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"/home/shivam/Desktop/netflix-gpt/src/index.js",[],[],["162"],"/home/shivam/Desktop/netflix-gpt/src/App.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/reportWebVitals.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/utils/appStore.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/Body.js",["163"],[],"/home/shivam/Desktop/netflix-gpt/src/utils/userSlice.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/Login.js",["164","165","166"],[],"/home/shivam/Desktop/netflix-gpt/src/components/Browse.js",["167","168","169"],[],"import React, { useEffect } from 'react'\nimport Header from './Header'\n//import { API_MOVIES_OPTIONS } from '../utils/constants'\n//import { useDispatch } from 'react-redux'\n//import { addNowPlayingMovies } from '../utils/moviesSlice'\nimport useAddPlayingMovies from '../CustomHooks/useAddPlayingMovies.js'\nimport MainContainer from './MainContainer'\nimport SecondaryContainer from './SecondaryContainer'\nimport usePopularMovies from '../CustomHooks/usePopularMovies'\nimport GPT_Search from './GPT_Search.js'\nimport { useSelector } from 'react-redux'\nimport useTrailerVideo from '../CustomHooks/useTrailerVideo.js'\n\nconst Browse = () => {\n  const ShowGptSearch = useSelector((store)=>store.gpt.ShowGptSearch);\n  useAddPlayingMovies();\n  usePopularMovies();\n  \n  return (\n    <div>\n        <Header/>\n        {ShowGptSearch?<GPT_Search/> : (\n           <>\n             <MainContainer/>\n             <SecondaryContainer/>\n           </>\n        )}\n        \n    </div>\n  )\n}\n\nexport default Browse","/home/shivam/Desktop/netflix-gpt/src/utils/Firebase.js",["170"],[],"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth } from \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDLVpHokt2z4KHmCQ8m2rw0gAKm4IFGbns\",\n  authDomain: \"netflix-2f3b5.firebaseapp.com\",\n  projectId: \"netflix-2f3b5\",\n  storageBucket: \"netflix-2f3b5.appspot.com\",\n  messagingSenderId: \"123330806823\",\n  appId: \"1:123330806823:web:37ad447c0fd2a88e037a02\",\n  measurementId: \"G-LDYCN5ZBTP\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nexport const auth =getAuth();","/home/shivam/Desktop/netflix-gpt/src/components/Header.js",["171","172"],[],"import React from 'react';\nimport { auth } from '../utils/Firebase';\nimport { signOut } from 'firebase/auth';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { addUser, removeUser } from '../utils/userSlice';\nimport { useEffect } from 'react';\nimport { LOGO, SUPPORTED_LANG } from '../utils/constants';\nimport { toggleGptSearch } from '../utils/gptSearch';\nimport { changeLanguage } from '../utils/configSlice';\n\nconst Header = () => {\n\n  const user =useSelector(store => store.user);\n // console.log(user);\n  const navigate =useNavigate();\n  const dispatch = useDispatch();\n  const showGptSearch = useSelector((store)=>store.gpt.ShowGptSearch);\n  \n\n  useEffect(()=>{\n   const unsubscribe = onAuthStateChanged(auth, (user) => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/auth.user\n        const {uid, email , DisplayName,photoURL} = user;\n        dispatch(addUser(\n          {uid:uid ,\n           email:email , \n           DisplayName:DisplayName,\n           photoURL:photoURL}\n          ))\n          navigate(\"/Browse\")\n          \n        // ...\n      } else {\n        // User is signed out\n        // ...\n        dispatch(removeUser());\n        navigate(\"/\")\n      }\n    });\n    return()=>unsubscribe();\n  },[])\n\n  const HandleSignOut=()=>{\n    signOut(auth).then(() => {\n      // Sign-out successful.\n     // navigate(\"/\");\n    }).catch((error) => {\n      // An error happened.\n      navigate(\"/error\")\n    });\n  }\n\n  const HandleGPT_Search=()=>{\n    dispatch(toggleGptSearch())\n  };\n\n  const handlechangeLanguage=(e)=>{\n    dispatch(changeLanguage(e.target.value));\n  }\n\n  return (\n    <div className='absolute z-30  h-auto flex justify-between w-full bg-slate-700 sm:to-blue-400 md:to-blue-400 flex-col md:flex-row'  >\n      <img className='w-40 h-10 md:h-auto   mx-auto md:mx-0 bg-gradient-to-b from-slate-700' src={LOGO} alt='logo'/>\n      {user &&\n      <div className='flex justify-between p-3'>\n     {  showGptSearch &&\n       <select className='h-7 mt-3 rounded-md bg-slate-900 text-gray-50' onChange={handlechangeLanguage} >\n          { SUPPORTED_LANG.map((Lang)=><option key={Lang.identifier} value={Lang.identifier}>{Lang.name}</option>) }\n       </select>\n      }\n          <button className='px-1 mt-2 h-8 mx-1 bg-fuchsia-400 text-gray-50 rounded-lg'\n              onClick={HandleGPT_Search}>{showGptSearch?\"Home\":\"GPT Search\"}</button>\n        \n          <img className='hidden md:inline-block h-10 w-10 rounded-md ' src={user ? user.photoURL : null}/>\n          <button onClick={HandleSignOut} className='bg-red-700 h-6 my-3 rounded-lg '>SignOut</button>\n        \n      </div>}\n      \n    </div>\n  )\n}\n\nexport default Header;","/home/shivam/Desktop/netflix-gpt/src/utils/Validate.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/utils/constants.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/utils/moviesSlice.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/MainContainer.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/SecondaryContainer.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/VideoTitle.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/VideoBackground.js",["173","174","175"],[],"import React, { useState } from 'react';\n//import { useEffect } from 'react';\nimport { API_MOVIES_OPTIONS } from '../utils/constants';\nimport { useDispatch, useSelector } from 'react-redux';\n//import { addTrailerVideo } from '../utils/moviesSlice';\nimport useTrailerVideo from '../CustomHooks/useTrailerVideo';\n\nconst VideoBackground = ({movie_id}) => {\n\n  const trailerVideo = useSelector((store)=>store.movies.trailerVideo);\n  useTrailerVideo(movie_id);\n  console.log(trailerVideo)\n  return (\n    <div className='pt-0 md:pt-0'>\n       <iframe className='w-screen aspect-video ' src= {\"https://www.youtube.com/embed/\"+ trailerVideo?.key  +\"?autoplay=1&mute=1\" } title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowFullScreen>\n       </iframe>\n    </div>\n  )\n}\n\nexport default VideoBackground","/home/shivam/Desktop/netflix-gpt/src/CustomHooks/useTrailerVideo.js",["176","177"],[],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTrailerVideo } from '../utils/moviesSlice';\nimport { API_MOVIES_OPTIONS } from '../utils/constants';\n\nconst useTrailerVideo = (movie_id) => {\n    \n  //const { trailerId , setTrailerId} = useState(null);\n  const dispatch = useDispatch();\n  const moviesTrailer = useSelector((store)=>store.movies.trailerVideo)\n\n  // fetch  trailer video and update the redux store \n  const getMovieVideoTrailer = async()=>{\n     const data = await fetch('https://api.themoviedb.org/3/movie/'+ movie_id + '/videos?language=en-US', API_MOVIES_OPTIONS);\n     const json = await data.json();\n     console.log(json);\n  //dispatch(addNowPlayingMovies(json.results))\n     const filterData = json.results.filter((video)=>video.type===\"Trailer\");\n     const trailer = filterData ? filterData[0] : json.results[0];\n     console.log(trailer);\n    // setTrailerId(trailer.key);\n     //use trailerId in API instead trailerVideo.key\n     dispatch(addTrailerVideo(trailer))\n    \n   }\n \n   useEffect(()=>{\n    !moviesTrailer && getMovieVideoTrailer();\n   },[])\n}\n\nexport default useTrailerVideo","/home/shivam/Desktop/netflix-gpt/src/components/MovieList.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/MovieCard.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/CustomHooks/usePopularMovies.js",["178"],[],"import { useDispatch, useSelector } from \"react-redux\";\nimport { API_MOVIES_OPTIONS } from \"../utils/constants\";\nimport { addPopularMovies} from \"../utils/moviesSlice\";\nimport { useEffect } from \"react\";\n\nconst usePopularMovies=()=>{\n  const dispatch = useDispatch();\n  const moviesPopular = useSelector((store)=>store.movies.PopularMovies)\n\n  // fetch data from tmdb and update store\n  const getmoviesPopular = async()=>{\n    const data = await fetch(\"https://api.themoviedb.org/3/movie/upcoming?language=en-US&page=1\",API_MOVIES_OPTIONS)\n    const json = await data.json();\n    console.log(json);\n    dispatch(addPopularMovies(json.results))\n  }\n\n  useEffect(()=>{\n    !moviesPopular && getmoviesPopular();\n  },[])\n};\n\nexport default  usePopularMovies;","/home/shivam/Desktop/netflix-gpt/src/CustomHooks/useAddPlayingMovies.js",["179"],[],"import { useDispatch, useSelector } from \"react-redux\";\nimport { API_MOVIES_OPTIONS } from \"../utils/constants\";\nimport { addNowPlayingMovies } from \"../utils/moviesSlice\";\nimport { useEffect } from \"react\";\n\nconst useAddPlayingMovies=()=>{\n  const dispatch = useDispatch();\n  const moviesPlaying = useSelector((store)=>store.movies.PlayingMovies)\n  // fetch data from tmdb and update store\n  const getmoviesPlaying = async()=>{\n    const data = await fetch(\"https://api.themoviedb.org/3/movie/now_playing?language=en-US&page=1\",API_MOVIES_OPTIONS)\n    const json = await data.json();\n    console.log(json);\n    dispatch(addNowPlayingMovies(json.results))\n  }\n\n  useEffect(()=>{\n   !moviesPlaying && getmoviesPlaying();\n  },[])\n};\n\nexport default  useAddPlayingMovies;","/home/shivam/Desktop/netflix-gpt/src/components/GPT_Search.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/utils/gptSearch.js",["180"],[],"import { createSlice } from \"@reduxjs/toolkit\";\n\nconst gptSlice = createSlice({\n    name:'gpt',\n    initialState:{\n        ShowGptSearch : false ,\n        gptMoviesList : null ,\n        tmdbResults : null ,\n    },\n    reducers:{\n        toggleGptSearch :(state)=>{\n            state.ShowGptSearch = !state.ShowGptSearch ;\n        },\n        addGptMovieResults:(state,action)=>{\n            const {tmdbResults , gptMoviesList } = action. payload\n            state.tmdbResults = tmdbResults;\n            state.gptMoviesList =gptMoviesList ;\n\n        }\n    }\n})\n\nexport default gptSlice.reducer ;\nexport const{toggleGptSearch, addGptMovieResults} = gptSlice.actions ;","/home/shivam/Desktop/netflix-gpt/src/components/GptSearchBar.js",["181"],[],"import React, { useRef } from 'react';\nimport { lang } from '../utils/constantLanguage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport openai from '../utils/openai';\nimport MovieList from './MovieList';\nimport { API_MOVIES_OPTIONS } from '../utils/constants';\nimport { addGptMovieResults } from '../utils/gptSearch';\n\nconst GptSearchBar = () => {\n  \n  const dispatch = useDispatch();\n  const searchText = useRef(null);\n  const lang_key = useSelector((store)=>store.config.lang) ;\n  console.log(lang_key);\n  const searchMovieTMDB = async(movie)=>{\n    const data = await fetch(\"https://api.themoviedb.org/3/search/movie?query=\"+movie+\"&include_adult=false&language=en-US&page=1\",API_MOVIES_OPTIONS);\n    const json = await data.json();\n    return json ;\n  }\n\n  const handleGptSearchSubmit=async()=>{\n      console.log(searchText.current.value);\n      //make an api call to gpt api and get movie results  \n\n      const gptQuery = \"Act as a movie recommendation system and suggest sone movies for the query\"+\n              searchText.current.value +\n              \"only give me name of 5 movies with separated by commas(,) like don , dhammal , ravan , sholay , gadar\"\n\n      const openaiResults = await openai.chat.completions.create({\n        messages: [{ role: 'user', content: gptQuery }],\n        model: 'gpt-3.5-turbo',\n      })\n      if(!openaiResults.choices){\n         //error handling page\n      }\n      console.log(openaiResults.choices?.[0]?.message?.content);\n      const gptMoviesList = openaiResults.choices?.[0]?.message?.content.split(\",\")\n      // now results - [\"sultan\",\"bajangi\",etc upto 5 movies]\n      console.log(gptMoviesList)\n\n      const promiseArray = gptMoviesList.map((movie)=>searchMovieTMDB(movie)) ;\n      //[promise, promise , promise , promise , promise]\n     //console.log(promiseArray)\n\n      const tmdbResults = await Promise.all(promiseArray);\n      console.log(tmdbResults);\n\n      dispatch(addGptMovieResults({tmdbResults:tmdbResults , gptMoviesList:gptMoviesList}))\n\n  }\n \n  return (\n    <div className='flex justify-center '>\n        <form className='mt-16 w-full md:w-1/2  grid grid-cols-12 bg-slate-900 p-1 rounded-lg' \n        onSubmit={(e)=>e.preventDefault()}\n         >\n            <input \n            ref={searchText}\n            type='text' \n            className=' p-2 mx-1 my-2  col-span-9  text-sm bg-sky-300 rounded-lg placeholder-black'\n             placeholder={lang[lang_key].searchPlaceholder}\n             />\n            <button className='p-1 my-2 bg-red-600  col-span-3 rounded-lg ' \n            onClick={handleGptSearchSubmit}>{lang[lang_key].search}</button>\n        </form>\n    </div>\n  )\n}\n\nexport default GptSearchBar","/home/shivam/Desktop/netflix-gpt/src/components/GptMovieSuggestion.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/utils/constantLanguage.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/utils/configSlice.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/utils/openai.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/ErrorPage.js",[],[],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":5,"column":10,"nodeType":"186","messageId":"187","endLine":5,"endColumn":28},{"ruleId":"184","severity":1,"message":"188","line":50,"column":17,"nodeType":"186","messageId":"187","endLine":50,"endColumn":21},{"ruleId":"184","severity":1,"message":"188","line":83,"column":15,"nodeType":"186","messageId":"187","endLine":83,"endColumn":19},{"ruleId":"184","severity":1,"message":"188","line":97,"column":15,"nodeType":"186","messageId":"187","endLine":97,"endColumn":19},{"ruleId":"184","severity":1,"message":"189","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":26},{"ruleId":"184","severity":1,"message":"190","line":12,"column":8,"nodeType":"186","messageId":"187","endLine":12,"endColumn":23},{"ruleId":"191","severity":1,"message":"192","line":22,"column":24,"nodeType":"193","messageId":"194","endLine":22,"endColumn":37},{"ruleId":"184","severity":1,"message":"195","line":22,"column":7,"nodeType":"186","messageId":"187","endLine":22,"endColumn":16},{"ruleId":"196","severity":1,"message":"197","line":45,"column":5,"nodeType":"198","endLine":45,"endColumn":7,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":78,"column":11,"nodeType":"193","endLine":78,"endColumn":108},{"ruleId":"184","severity":1,"message":"202","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"184","severity":1,"message":"203","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":28},{"ruleId":"184","severity":1,"message":"204","line":4,"column":10,"nodeType":"186","messageId":"187","endLine":4,"endColumn":21},{"ruleId":"184","severity":1,"message":"205","line":1,"column":8,"nodeType":"186","messageId":"187","endLine":1,"endColumn":13},{"ruleId":"196","severity":1,"message":"206","line":29,"column":6,"nodeType":"198","endLine":29,"endColumn":8,"suggestions":"207"},{"ruleId":"196","severity":1,"message":"208","line":20,"column":5,"nodeType":"198","endLine":20,"endColumn":7,"suggestions":"209"},{"ruleId":"196","severity":1,"message":"210","line":19,"column":5,"nodeType":"198","endLine":19,"endColumn":7,"suggestions":"211"},{"ruleId":"212","severity":1,"message":"213","line":15,"column":52,"nodeType":"214","messageId":"215","endLine":15,"endColumn":67,"fix":"216"},{"ruleId":"184","severity":1,"message":"217","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":17},"no-new-object",["218"],"no-unused-vars","'onAuthStateChanged' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'useEffect' is defined but never used.","'useTrailerVideo' is defined but never used.","react/jsx-pascal-case","Imported JSX component GPT_Search must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'analytics' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["219"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useState' is defined but never used.","'API_MOVIES_OPTIONS' is defined but never used.","'useDispatch' is defined but never used.","'React' is defined but never used.","React Hook useEffect has missing dependencies: 'getMovieVideoTrailer' and 'moviesTrailer'. Either include them or remove the dependency array.",["220"],"React Hook useEffect has missing dependencies: 'getmoviesPopular' and 'moviesPopular'. Either include them or remove the dependency array.",["221"],"React Hook useEffect has missing dependencies: 'getmoviesPlaying' and 'moviesPlaying'. Either include them or remove the dependency array.",["222"],"no-whitespace-before-property","Unexpected whitespace before property payload.","MemberExpression","unexpectedWhitespace",{"range":"223","text":"224"},"'MovieList' is defined but never used.","no-object-constructor",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},[435,437],".","Update the dependencies array to be: [dispatch, navigate]",{"range":"233","text":"234"},"Update the dependencies array to be: [getMovieVideoTrailer, moviesTrailer]",{"range":"235","text":"236"},"Update the dependencies array to be: [getmoviesPopular, moviesPopular]",{"range":"237","text":"238"},"Update the dependencies array to be: [getmoviesPlaying, moviesPlaying]",{"range":"239","text":"240"},[1431,1433],"[dispatch, navigate]",[1133,1135],"[getMovieVideoTrailer, moviesTrailer]",[713,715],"[getmoviesPopular, moviesPopular]",[724,726],"[getmoviesPlaying, moviesPlaying]"]