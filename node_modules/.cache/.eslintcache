[{"/home/shivam/Desktop/netflix-gpt/src/index.js":"1","/home/shivam/Desktop/netflix-gpt/src/App.js":"2","/home/shivam/Desktop/netflix-gpt/src/reportWebVitals.js":"3","/home/shivam/Desktop/netflix-gpt/src/utils/appStore.js":"4","/home/shivam/Desktop/netflix-gpt/src/components/Body.js":"5","/home/shivam/Desktop/netflix-gpt/src/utils/userSlice.js":"6","/home/shivam/Desktop/netflix-gpt/src/components/Login.js":"7","/home/shivam/Desktop/netflix-gpt/src/components/Browse.js":"8","/home/shivam/Desktop/netflix-gpt/src/utils/Firebase.js":"9","/home/shivam/Desktop/netflix-gpt/src/components/Header.js":"10","/home/shivam/Desktop/netflix-gpt/src/utils/Validate.js":"11","/home/shivam/Desktop/netflix-gpt/src/utils/constants.js":"12","/home/shivam/Desktop/netflix-gpt/src/utils/moviesSlice.js":"13","/home/shivam/Desktop/netflix-gpt/src/components/MainContainer.js":"14","/home/shivam/Desktop/netflix-gpt/src/components/SecondaryContainer.js":"15","/home/shivam/Desktop/netflix-gpt/src/components/VideoTitle.js":"16","/home/shivam/Desktop/netflix-gpt/src/components/VideoBackground.js":"17","/home/shivam/Desktop/netflix-gpt/src/CustomHooks/useTrailerVideo.js":"18","/home/shivam/Desktop/netflix-gpt/src/components/MovieList.js":"19","/home/shivam/Desktop/netflix-gpt/src/components/MovieCard.js":"20","/home/shivam/Desktop/netflix-gpt/src/CustomHooks/usePopularMovies.js":"21","/home/shivam/Desktop/netflix-gpt/src/CustomHooks/useAddPlayingMovies.js":"22","/home/shivam/Desktop/netflix-gpt/src/components/GPT_Search.js":"23","/home/shivam/Desktop/netflix-gpt/src/utils/gptSearch.js":"24","/home/shivam/Desktop/netflix-gpt/src/components/GptSearchBar.js":"25","/home/shivam/Desktop/netflix-gpt/src/components/GptMovieSuggestion.js":"26","/home/shivam/Desktop/netflix-gpt/src/utils/constantLanguage.js":"27","/home/shivam/Desktop/netflix-gpt/src/utils/configSlice.js":"28","/home/shivam/Desktop/netflix-gpt/src/utils/openai.js":"29","/home/shivam/Desktop/netflix-gpt/src/components/ErrorPage.js":"30"},{"size":535,"mtime":1701290716390,"results":"31","hashOfConfig":"32"},{"size":269,"mtime":1700713083453,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":1698853682976,"results":"34","hashOfConfig":"32"},{"size":426,"mtime":1705340465979,"results":"35","hashOfConfig":"32"},{"size":590,"mtime":1708522573642,"results":"36","hashOfConfig":"32"},{"size":392,"mtime":1700712228276,"results":"37","hashOfConfig":"32"},{"size":5582,"mtime":1708515486800,"results":"38","hashOfConfig":"32"},{"size":992,"mtime":1705559795857,"results":"39","hashOfConfig":"32"},{"size":891,"mtime":1700540456584,"results":"40","hashOfConfig":"32"},{"size":2864,"mtime":1702921788638,"results":"41","hashOfConfig":"32"},{"size":450,"mtime":1705495259626,"results":"42","hashOfConfig":"32"},{"size":1267,"mtime":1708401004227,"results":"43","hashOfConfig":"32"},{"size":688,"mtime":1702318659939,"results":"44","hashOfConfig":"32"},{"size":620,"mtime":1705560455636,"results":"45","hashOfConfig":"32"},{"size":801,"mtime":1702910938068,"results":"46","hashOfConfig":"32"},{"size":704,"mtime":1702919567217,"results":"47","hashOfConfig":"32"},{"size":898,"mtime":1705560710571,"results":"48","hashOfConfig":"32"},{"size":1170,"mtime":1708410318337,"results":"49","hashOfConfig":"32"},{"size":597,"mtime":1708401903824,"results":"50","hashOfConfig":"32"},{"size":294,"mtime":1702909236729,"results":"51","hashOfConfig":"32"},{"size":754,"mtime":1702807000298,"results":"52","hashOfConfig":"32"},{"size":768,"mtime":1705810647217,"results":"53","hashOfConfig":"32"},{"size":620,"mtime":1702900971522,"results":"54","hashOfConfig":"32"},{"size":664,"mtime":1708412884744,"results":"55","hashOfConfig":"32"},{"size":2697,"mtime":1708418080533,"results":"56","hashOfConfig":"32"},{"size":626,"mtime":1702822977911,"results":"57","hashOfConfig":"32"},{"size":556,"mtime":1702486605998,"results":"58","hashOfConfig":"32"},{"size":358,"mtime":1702487532348,"results":"59","hashOfConfig":"32"},{"size":231,"mtime":1705339906809,"results":"60","hashOfConfig":"32"},{"size":348,"mtime":1707071472612,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"17c4s1o",{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"65"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"65"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"65"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"65"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"65"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"65"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"65"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"65"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"144","usedDeprecatedRules":"65"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"65"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},"/home/shivam/Desktop/netflix-gpt/src/index.js",[],[],["165"],"/home/shivam/Desktop/netflix-gpt/src/App.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/reportWebVitals.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/utils/appStore.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/Body.js",["166","167"],[],"import React from 'react';\nimport Browse from './Browse';\nimport Login from './Login';\nimport ErrorPage from './ErrorPage'\nimport { RouterProvider, createBrowserRouter, Route, Switch } from 'react-router-dom';\n\nconst Body = () => {\n  const AppRouter = createBrowserRouter([\n    {\n      path: \"/NETFLIX-GPT\",\n      element: <Login/> ,\n      errorElement: <ErrorPage /> // Provide your error page component here\n    },\n    {\n      path: \"/Browse\",\n      element: <Browse/>\n    }\n  ]);\n\n  return (\n    <div>\n      <RouterProvider router={AppRouter}/>\n      </div>\n  );\n}\n\nexport default Body;\n","/home/shivam/Desktop/netflix-gpt/src/utils/userSlice.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/Login.js",["168","169","170"],[],"import React, { useRef, useState } from 'react';\nimport Header from './Header';\nimport { CheckValidData } from '../utils/Validate';\nimport { createUserWithEmailAndPassword, updateProfile, signInWithEmailAndPassword, sendPasswordResetEmail, signInWithPopup } from \"firebase/auth\"; // Import signInWithPopup function\nimport { auth } from '../utils/Firebase';\nimport { useDispatch } from 'react-redux';\nimport { addUser } from '../utils/userSlice';\nimport { BG_URL, PHOTO_URL } from '../utils/constants';\nimport { GoogleAuthProvider } from 'firebase/auth'; // Import GoogleAuthProvider\nimport { FacebookAuthProvider } from \"firebase/auth\";\n\nconst Login = () => {\n  const [SignInOut, SetSignInOut] = useState(true);\n  const [ErrorMessage, setErrorMessage] = useState(null);\n  const dispatch = useDispatch();\n\n  const name = useRef(null);\n  const email = useRef(null);\n  const password = useRef(null);\n\n  const ValidationCheck = () => {\n    const message = CheckValidData(email.current.value, password.current.value);\n    setErrorMessage(message);\n    if (message) return;\n\n    if (!SignInOut) {\n      // Sign Up Logic\n      createUserWithEmailAndPassword(auth, email.current.value, password.current.value)\n        .then((userCredential) => {\n          const user = userCredential.user;\n          updateProfile(user, {\n            displayName: name.current.value,\n            photoURL: PHOTO_URL\n          }).then(() => {\n            const { uid, email, DisplayName, photoURL } = auth.currentUser;\n            dispatch(addUser({ uid: uid, email: email, DisplayName: DisplayName, photoURL: photoURL }));\n          }).catch((error) => {\n            setErrorMessage(error.message);\n          });\n        })\n        .catch((error) => {\n          const errorCode = error.code;\n          const errorMessage = error.message;\n          setErrorMessage(errorCode + \" \" + errorMessage);\n        });\n    } else {\n      // Sign In Logic\n      signInWithEmailAndPassword(auth, email.current.value, password.current.value)\n        .then((userCredential) => {\n          const user = userCredential.user;\n        })\n        .catch((error) => {\n          const errorCode = error.code;\n          const errorMessage = error.message;\n          setErrorMessage(errorCode + \" \" + errorMessage);\n        });\n    }\n  };\n\n  const SignHandle = (e) => {\n    e.preventDefault();\n    SetSignInOut(!SignInOut);\n  };\n\n  const handleForgotPassword = () => {\n    const emailAddress = email.current.value;\n    sendPasswordResetEmail(auth, emailAddress)\n      .then(() => {\n        // Password reset email sent\n        alert(\"Go to email for password reset\");\n      })\n      .catch((error) => {\n        // Error sending password reset email\n         console.error(\"Error sending password reset email:\", error);\n      });\n  };\n\n  const handleFacebookSignIn = () => {\n    const provider = new FacebookAuthProvider();\n    signInWithPopup(auth, provider)\n      .then((result) => {\n        // Facebook Sign-in successful\n        const user = result.user;\n        // Additional logic (e.g., dispatching user data to Redux)\n      })\n      .catch((error) => {\n        // Handle errors\n        console.error(\"Facebook Sign-in error:\", error);\n      });\n  };\n\n  const handleGoogleSignIn = () => {\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(auth, provider)\n      .then((result) => {\n        // Google Sign-in successful\n        const user = result.user;\n        // Additional logic (e.g., dispatching user data to Redux)\n      })\n      .catch((error) => {\n        // Handle errors\n        console.error(\"Google Sign-in error:\", error);\n      });\n  };\n\n  return (\n    <div>\n      <div>\n        <Header />\n      </div>\n\n      <div className='absolute'>\n        <img className='h-screen md:h-full object-cover md:' src={BG_URL} alt='logo'></img>\n      </div>\n\n      <form onClick={(e) => e.preventDefault()} className=\"w-full md:w-72 mx-auto relative bg-gray-900 top-28 px-2 rounded-lg bg opacity-90\">\n\n        <h1 className='font-bold text-zinc-100 p-2'>{SignInOut ? \"Sign In\" : \"Sign Up\"}</h1>\n        {\n          !SignInOut && (<input type='text' ref={name} placeholder='Name' className='w-[95%] md:w-auto px-2 m-2 rounded-md bg-gray-100' />)\n        }\n        <input type='text' ref={email} placeholder='Email or Phone number' className='w-[95%] md:w-auto px-2 m-2 rounded-md bg-gray-100' />\n        <input type='password' ref={password} placeholder='Password' className='w-[95%] md:w-auto px-2 m-2 rounded-md bg-gray-100' />\n        <p className='px-2 m-2 text-red-600 text-sm'>{ErrorMessage}</p>\n        <button onClick={ValidationCheck} className='w-[95%] md:w-[95%] px-2 m-2 rounded-md bg-rose-600'>{SignInOut ? \"Login\" : \"SignUp\"}</button>\n        <button className='text-slate-50 m-2 font-semibold text-sm cursor-pointer' onClick={SignHandle}>\n          {SignInOut ? \"New to Netflix? Sign up now.\" : \"Already registered? Sign In Now.\"}\n        </button>\n        {SignInOut && ( // Render the \"Forgot Password\" button only in the Sign In mode\n          <button className='text-slate-50 m-2 font-semibold text-sm cursor-pointer' onClick={handleForgotPassword}>\n            Forgot Password?\n          </button>\n        )}\n        <button onClick={handleGoogleSignIn} className='w-[95%] md:w-[95%] px-2 m-2 rounded-md bg-rose-600'>{SignInOut ? \"Login\" : \"SignUp\"} with Google</button>\n        <button onClick={handleFacebookSignIn} className='w-[95%] md:w-[95%] px-2 m-2 rounded-md bg-rose-600'>{SignInOut ? \"Login\" : \"SignUp\"} with Facebook</button>\n      </form>\n    </div>\n\n  )\n}\n\nexport default Login;\n","/home/shivam/Desktop/netflix-gpt/src/components/Browse.js",["171","172","173"],[],"import React, { useEffect } from 'react'\nimport Header from './Header'\n//import { API_MOVIES_OPTIONS } from '../utils/constants'\n//import { useDispatch } from 'react-redux'\n//import { addNowPlayingMovies } from '../utils/moviesSlice'\nimport useAddPlayingMovies from '../CustomHooks/useAddPlayingMovies.js'\nimport MainContainer from './MainContainer'\nimport SecondaryContainer from './SecondaryContainer'\nimport usePopularMovies from '../CustomHooks/usePopularMovies'\nimport GPT_Search from './GPT_Search.js'\nimport { useSelector } from 'react-redux'\nimport useTrailerVideo from '../CustomHooks/useTrailerVideo.js'\n\nconst Browse = () => {\n  const ShowGptSearch = useSelector((store)=>store.gpt.ShowGptSearch);\n  useAddPlayingMovies();\n  usePopularMovies();\n  \n  return (\n    <div>\n        <Header/>\n        {ShowGptSearch?<GPT_Search/> : (\n           <>\n             <MainContainer/>\n             <SecondaryContainer/>\n           </>\n        )}\n        \n    </div>\n  )\n}\n\nexport default Browse","/home/shivam/Desktop/netflix-gpt/src/utils/Firebase.js",["174"],[],"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth } from \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDLVpHokt2z4KHmCQ8m2rw0gAKm4IFGbns\",\n  authDomain: \"netflix-2f3b5.firebaseapp.com\",\n  projectId: \"netflix-2f3b5\",\n  storageBucket: \"netflix-2f3b5.appspot.com\",\n  messagingSenderId: \"123330806823\",\n  appId: \"1:123330806823:web:37ad447c0fd2a88e037a02\",\n  measurementId: \"G-LDYCN5ZBTP\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nexport const auth =getAuth();","/home/shivam/Desktop/netflix-gpt/src/components/Header.js",["175","176"],[],"import React from 'react';\nimport { auth } from '../utils/Firebase';\nimport { signOut } from 'firebase/auth';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { addUser, removeUser } from '../utils/userSlice';\nimport { useEffect } from 'react';\nimport { LOGO, SUPPORTED_LANG } from '../utils/constants';\nimport { toggleGptSearch } from '../utils/gptSearch';\nimport { changeLanguage } from '../utils/configSlice';\n\nconst Header = () => {\n\n  const user =useSelector(store => store.user);\n // console.log(user);\n  const navigate =useNavigate();\n  const dispatch = useDispatch();\n  const showGptSearch = useSelector((store)=>store.gpt.ShowGptSearch);\n  \n\n  useEffect(()=>{\n   const unsubscribe = onAuthStateChanged(auth, (user) => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/auth.user\n        const {uid, email , DisplayName,photoURL} = user;\n        dispatch(addUser(\n          {uid:uid ,\n           email:email , \n           DisplayName:DisplayName,\n           photoURL:photoURL}\n          ))\n          navigate(\"/Browse\")\n          \n        // ...\n      } else {\n        // User is signed out\n        // ...\n        dispatch(removeUser());\n        navigate(\"/\")\n      }\n    });\n    return()=>unsubscribe();\n  },[])\n\n  const HandleSignOut=()=>{\n    signOut(auth).then(() => {\n      // Sign-out successful.\n     // navigate(\"/\");\n    }).catch((error) => {\n      // An error happened.\n      navigate(\"/error\")\n    });\n  }\n\n  const HandleGPT_Search=()=>{\n    dispatch(toggleGptSearch())\n  };\n\n  const handlechangeLanguage=(e)=>{\n    dispatch(changeLanguage(e.target.value));\n  }\n\n  return (\n    <div className='absolute z-30  h-auto flex justify-between w-full bg-slate-700 sm:to-blue-400 md:to-blue-400 flex-col md:flex-row'  >\n      <img className='w-40 h-10 md:h-auto   mx-auto md:mx-0 bg-gradient-to-b from-slate-700' src={LOGO} alt='logo'/>\n      {user &&\n      <div className='flex justify-between p-3'>\n     {  showGptSearch &&\n       <select className='h-7 mt-3 rounded-md bg-slate-900 text-gray-50' onChange={handlechangeLanguage} >\n          { SUPPORTED_LANG.map((Lang)=><option key={Lang.identifier} value={Lang.identifier}>{Lang.name}</option>) }\n       </select>\n      }\n          <button className='px-1 mt-2 h-8 mx-1 bg-fuchsia-400 text-gray-50 rounded-lg'\n              onClick={HandleGPT_Search}>{showGptSearch?\"Home\":\"GPT Search\"}</button>\n        \n          <img className='hidden md:inline-block h-10 w-10 rounded-md ' src={user ? user.photoURL : null}/>\n          <button onClick={HandleSignOut} className='bg-red-700 h-6 my-3 rounded-lg '>SignOut</button>\n        \n      </div>}\n      \n    </div>\n  )\n}\n\nexport default Header;","/home/shivam/Desktop/netflix-gpt/src/utils/Validate.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/utils/constants.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/utils/moviesSlice.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/MainContainer.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/SecondaryContainer.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/VideoTitle.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/VideoBackground.js",["177","178","179"],[],"import React, { useState } from 'react';\n//import { useEffect } from 'react';\nimport { API_MOVIES_OPTIONS } from '../utils/constants';\nimport { useDispatch, useSelector } from 'react-redux';\n//import { addTrailerVideo } from '../utils/moviesSlice';\nimport useTrailerVideo from '../CustomHooks/useTrailerVideo';\n\nconst VideoBackground = ({movie_id}) => {\n\n  const trailerVideo = useSelector((store)=>store.movies.trailerVideo);\n  useTrailerVideo(movie_id);\n  console.log(trailerVideo)\n  return (\n    <div className='pt-0 md:pt-0'>\n       <iframe className='w-screen aspect-video ' src= {\"https://www.youtube.com/embed/\"+ trailerVideo?.key  +\"?autoplay=1&mute=1\" } title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowFullScreen>\n       </iframe>\n    </div>\n  )\n}\n\nexport default VideoBackground","/home/shivam/Desktop/netflix-gpt/src/CustomHooks/useTrailerVideo.js",["180","181"],[],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTrailerVideo } from '../utils/moviesSlice';\nimport { API_MOVIES_OPTIONS } from '../utils/constants';\n\nconst useTrailerVideo = (movie_id) => {\n    \n  //const { trailerId , setTrailerId} = useState(null);\n  const dispatch = useDispatch();\n  const moviesTrailer = useSelector((store)=>store.movies.trailerVideo)\n\n  // fetch  trailer video and update the redux store \n  const getMovieVideoTrailer = async()=>{\n     const data = await fetch('https://api.themoviedb.org/3/movie/'+ movie_id + '/videos?language=en-US', API_MOVIES_OPTIONS);\n     const json = await data.json();\n     console.log(json);\n  //dispatch(addNowPlayingMovies(json.results))\n     const filterData = json.results.filter((video)=>video.type===\"Trailer\");\n     const trailer = filterData ? filterData[0] : json.results[0];\n     console.log(trailer);\n    // setTrailerId(trailer.key);\n     //use trailerId in API instead trailerVideo.key\n     dispatch(addTrailerVideo(trailer))\n    \n   }\n \n   useEffect(()=>{\n    !moviesTrailer && getMovieVideoTrailer();\n   },[])\n}\n\nexport default useTrailerVideo","/home/shivam/Desktop/netflix-gpt/src/components/MovieList.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/MovieCard.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/CustomHooks/usePopularMovies.js",["182"],[],"import { useDispatch, useSelector } from \"react-redux\";\nimport { API_MOVIES_OPTIONS } from \"../utils/constants\";\nimport { addPopularMovies} from \"../utils/moviesSlice\";\nimport { useEffect } from \"react\";\n\nconst usePopularMovies=()=>{\n  const dispatch = useDispatch();\n  const moviesPopular = useSelector((store)=>store.movies.PopularMovies)\n\n  // fetch data from tmdb and update store\n  const getmoviesPopular = async()=>{\n    const data = await fetch(\"https://api.themoviedb.org/3/movie/upcoming?language=en-US&page=1\",API_MOVIES_OPTIONS)\n    const json = await data.json();\n    console.log(json);\n    dispatch(addPopularMovies(json.results))\n  }\n\n  useEffect(()=>{\n    !moviesPopular && getmoviesPopular();\n  },[])\n};\n\nexport default  usePopularMovies;","/home/shivam/Desktop/netflix-gpt/src/CustomHooks/useAddPlayingMovies.js",["183"],[],"import { useDispatch, useSelector } from \"react-redux\";\nimport { API_MOVIES_OPTIONS } from \"../utils/constants\";\nimport { addNowPlayingMovies } from \"../utils/moviesSlice\";\nimport { useEffect } from \"react\";\n\nconst useAddPlayingMovies=()=>{\n  const dispatch = useDispatch();\n  const moviesPlaying = useSelector((store)=>store.movies.PlayingMovies)\n  // fetch data from tmdb and update store\n  const getmoviesPlaying = async()=>{\n    const data = await fetch(\"https://api.themoviedb.org/3/movie/now_playing?language=en-US&page=1\",API_MOVIES_OPTIONS)\n    const json = await data.json();\n    console.log(json);\n    dispatch(addNowPlayingMovies(json.results))\n  }\n\n  useEffect(()=>{\n   !moviesPlaying && getmoviesPlaying();\n  },[])\n};\n\nexport default  useAddPlayingMovies;","/home/shivam/Desktop/netflix-gpt/src/components/GPT_Search.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/utils/gptSearch.js",["184"],[],"import { createSlice } from \"@reduxjs/toolkit\";\n\nconst gptSlice = createSlice({\n    name:'gpt',\n    initialState:{\n        ShowGptSearch : false ,\n        gptMoviesList : null ,\n        tmdbResults : null ,\n    },\n    reducers:{\n        toggleGptSearch :(state)=>{\n            state.ShowGptSearch = !state.ShowGptSearch ;\n        },\n        addGptMovieResults:(state,action)=>{\n            const {tmdbResults , gptMoviesList } = action. payload\n            state.tmdbResults = tmdbResults;\n            state.gptMoviesList =gptMoviesList ;\n\n        }\n    }\n})\n\nexport default gptSlice.reducer ;\nexport const{toggleGptSearch, addGptMovieResults} = gptSlice.actions ;","/home/shivam/Desktop/netflix-gpt/src/components/GptSearchBar.js",["185"],[],"import React, { useRef } from 'react';\nimport { lang } from '../utils/constantLanguage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport openai from '../utils/openai';\nimport MovieList from './MovieList';\nimport { API_MOVIES_OPTIONS } from '../utils/constants';\nimport { addGptMovieResults } from '../utils/gptSearch';\n\nconst GptSearchBar = () => {\n  \n  const dispatch = useDispatch();\n  const searchText = useRef(null);\n  const lang_key = useSelector((store)=>store.config.lang) ;\n  console.log(lang_key);\n  const searchMovieTMDB = async(movie)=>{\n    const data = await fetch(\"https://api.themoviedb.org/3/search/movie?query=\"+movie+\"&include_adult=false&language=en-US&page=1\",API_MOVIES_OPTIONS);\n    const json = await data.json();\n    return json ;\n  }\n\n  const handleGptSearchSubmit=async()=>{\n      console.log(searchText.current.value);\n      //make an api call to gpt api and get movie results  \n\n      const gptQuery = \"Act as a movie recommendation system and suggest sone movies for the query\"+\n              searchText.current.value +\n              \"only give me name of 5 movies with separated by commas(,) like don , dhammal , ravan , sholay , gadar\"\n\n      const openaiResults = await openai.chat.completions.create({\n        messages: [{ role: 'user', content: gptQuery }],\n        model: 'gpt-3.5-turbo',\n      })\n      if(!openaiResults.choices){\n         //error handling page\n      }\n      console.log(openaiResults.choices?.[0]?.message?.content);\n      const gptMoviesList = openaiResults.choices?.[0]?.message?.content.split(\",\")\n      // now results - [\"sultan\",\"bajangi\",etc upto 5 movies]\n      console.log(gptMoviesList)\n\n      const promiseArray = gptMoviesList.map((movie)=>searchMovieTMDB(movie)) ;\n      //[promise, promise , promise , promise , promise]\n     //console.log(promiseArray)\n\n      const tmdbResults = await Promise.all(promiseArray);\n      console.log(tmdbResults);\n\n      dispatch(addGptMovieResults({tmdbResults:tmdbResults , gptMoviesList:gptMoviesList}))\n\n  }\n \n  return (\n    <div className='flex justify-center '>\n        <form className='mt-16 w-full md:w-1/2  grid grid-cols-12 bg-slate-900 p-1 rounded-lg' \n        onSubmit={(e)=>e.preventDefault()}\n         >\n            <input \n            ref={searchText}\n            type='text' \n            className=' p-2 mx-1 my-2  col-span-9  text-sm bg-sky-300 rounded-lg placeholder-black'\n             placeholder={lang[lang_key].searchPlaceholder}\n             />\n            <button className='p-1 my-2 bg-red-600  col-span-3 rounded-lg ' \n            onClick={handleGptSearchSubmit}>{lang[lang_key].search}</button>\n        </form>\n    </div>\n  )\n}\n\nexport default GptSearchBar","/home/shivam/Desktop/netflix-gpt/src/components/GptMovieSuggestion.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/utils/constantLanguage.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/utils/configSlice.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/utils/openai.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/ErrorPage.js",[],[],["186"],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":5,"column":47,"nodeType":"191","messageId":"192","endLine":5,"endColumn":52},{"ruleId":"189","severity":1,"message":"193","line":5,"column":54,"nodeType":"191","messageId":"192","endLine":5,"endColumn":60},{"ruleId":"189","severity":1,"message":"194","line":50,"column":17,"nodeType":"191","messageId":"192","endLine":50,"endColumn":21},{"ruleId":"189","severity":1,"message":"194","line":83,"column":15,"nodeType":"191","messageId":"192","endLine":83,"endColumn":19},{"ruleId":"189","severity":1,"message":"194","line":97,"column":15,"nodeType":"191","messageId":"192","endLine":97,"endColumn":19},{"ruleId":"189","severity":1,"message":"195","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"196","line":12,"column":8,"nodeType":"191","messageId":"192","endLine":12,"endColumn":23},{"ruleId":"197","severity":1,"message":"198","line":22,"column":24,"nodeType":"199","messageId":"200","endLine":22,"endColumn":37},{"ruleId":"189","severity":1,"message":"201","line":22,"column":7,"nodeType":"191","messageId":"192","endLine":22,"endColumn":16},{"ruleId":"202","severity":1,"message":"203","line":45,"column":5,"nodeType":"204","endLine":45,"endColumn":7,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":78,"column":11,"nodeType":"199","endLine":78,"endColumn":108},{"ruleId":"189","severity":1,"message":"208","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":25},{"ruleId":"189","severity":1,"message":"209","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":28},{"ruleId":"189","severity":1,"message":"210","line":4,"column":10,"nodeType":"191","messageId":"192","endLine":4,"endColumn":21},{"ruleId":"189","severity":1,"message":"211","line":1,"column":8,"nodeType":"191","messageId":"192","endLine":1,"endColumn":13},{"ruleId":"202","severity":1,"message":"212","line":29,"column":6,"nodeType":"204","endLine":29,"endColumn":8,"suggestions":"213"},{"ruleId":"202","severity":1,"message":"214","line":20,"column":5,"nodeType":"204","endLine":20,"endColumn":7,"suggestions":"215"},{"ruleId":"202","severity":1,"message":"216","line":19,"column":5,"nodeType":"204","endLine":19,"endColumn":7,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":15,"column":52,"nodeType":"220","messageId":"221","endLine":15,"endColumn":67,"fix":"222"},{"ruleId":"189","severity":1,"message":"223","line":5,"column":8,"nodeType":"191","messageId":"192","endLine":5,"endColumn":17},{"ruleId":"187","replacedBy":"224"},"no-new-object",["225"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'user' is assigned a value but never used.","'useEffect' is defined but never used.","'useTrailerVideo' is defined but never used.","react/jsx-pascal-case","Imported JSX component GPT_Search must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'analytics' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["226"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useState' is defined but never used.","'API_MOVIES_OPTIONS' is defined but never used.","'useDispatch' is defined but never used.","'React' is defined but never used.","React Hook useEffect has missing dependencies: 'getMovieVideoTrailer' and 'moviesTrailer'. Either include them or remove the dependency array.",["227"],"React Hook useEffect has missing dependencies: 'getmoviesPopular' and 'moviesPopular'. Either include them or remove the dependency array.",["228"],"React Hook useEffect has missing dependencies: 'getmoviesPlaying' and 'moviesPlaying'. Either include them or remove the dependency array.",["229"],"no-whitespace-before-property","Unexpected whitespace before property payload.","MemberExpression","unexpectedWhitespace",{"range":"230","text":"231"},"'MovieList' is defined but never used.",["225"],"no-object-constructor",{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},[435,437],".","Update the dependencies array to be: [dispatch, navigate]",{"range":"240","text":"241"},"Update the dependencies array to be: [getMovieVideoTrailer, moviesTrailer]",{"range":"242","text":"243"},"Update the dependencies array to be: [getmoviesPopular, moviesPopular]",{"range":"244","text":"245"},"Update the dependencies array to be: [getmoviesPlaying, moviesPlaying]",{"range":"246","text":"247"},[1431,1433],"[dispatch, navigate]",[1133,1135],"[getMovieVideoTrailer, moviesTrailer]",[713,715],"[getmoviesPopular, moviesPopular]",[724,726],"[getmoviesPlaying, moviesPlaying]"]