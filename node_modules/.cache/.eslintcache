[{"/home/shivam/Desktop/netflix-gpt/src/index.js":"1","/home/shivam/Desktop/netflix-gpt/src/App.js":"2","/home/shivam/Desktop/netflix-gpt/src/reportWebVitals.js":"3","/home/shivam/Desktop/netflix-gpt/src/utils/appStore.js":"4","/home/shivam/Desktop/netflix-gpt/src/components/Body.js":"5","/home/shivam/Desktop/netflix-gpt/src/utils/userSlice.js":"6","/home/shivam/Desktop/netflix-gpt/src/components/Login.js":"7","/home/shivam/Desktop/netflix-gpt/src/components/Browse.js":"8","/home/shivam/Desktop/netflix-gpt/src/utils/Firebase.js":"9","/home/shivam/Desktop/netflix-gpt/src/components/Header.js":"10","/home/shivam/Desktop/netflix-gpt/src/utils/Validate.js":"11","/home/shivam/Desktop/netflix-gpt/src/utils/constants.js":"12","/home/shivam/Desktop/netflix-gpt/src/utils/moviesSlice.js":"13","/home/shivam/Desktop/netflix-gpt/src/components/MainContainer.js":"14","/home/shivam/Desktop/netflix-gpt/src/components/SecondaryContainer.js":"15","/home/shivam/Desktop/netflix-gpt/src/components/VideoTitle.js":"16","/home/shivam/Desktop/netflix-gpt/src/components/VideoBackground.js":"17","/home/shivam/Desktop/netflix-gpt/src/CustomHooks/useTrailerVideo.js":"18","/home/shivam/Desktop/netflix-gpt/src/components/MovieList.js":"19","/home/shivam/Desktop/netflix-gpt/src/components/MovieCard.js":"20","/home/shivam/Desktop/netflix-gpt/src/CustomHooks/usePopularMovies.js":"21","/home/shivam/Desktop/netflix-gpt/src/CustomHooks/useAddPlayingMovies.js":"22","/home/shivam/Desktop/netflix-gpt/src/components/GPT_Search.js":"23","/home/shivam/Desktop/netflix-gpt/src/utils/gptSearch.js":"24","/home/shivam/Desktop/netflix-gpt/src/components/GptSearchBar.js":"25","/home/shivam/Desktop/netflix-gpt/src/components/GptMovieSuggestion.js":"26","/home/shivam/Desktop/netflix-gpt/src/utils/constantLanguage.js":"27","/home/shivam/Desktop/netflix-gpt/src/utils/configSlice.js":"28","/home/shivam/Desktop/netflix-gpt/src/utils/openai.js":"29"},{"size":535,"mtime":1701290716390,"results":"30","hashOfConfig":"31"},{"size":269,"mtime":1700713083453,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1698853682976,"results":"33","hashOfConfig":"31"},{"size":426,"mtime":1702527520582,"results":"34","hashOfConfig":"31"},{"size":660,"mtime":1701110328379,"results":"35","hashOfConfig":"31"},{"size":392,"mtime":1700712228276,"results":"36","hashOfConfig":"31"},{"size":4030,"mtime":1702920319282,"results":"37","hashOfConfig":"31"},{"size":926,"mtime":1702359613018,"results":"38","hashOfConfig":"31"},{"size":891,"mtime":1700540456584,"results":"39","hashOfConfig":"31"},{"size":2864,"mtime":1702921788638,"results":"40","hashOfConfig":"31"},{"size":450,"mtime":1700452951831,"results":"41","hashOfConfig":"31"},{"size":1267,"mtime":1702820156898,"results":"42","hashOfConfig":"31"},{"size":688,"mtime":1702318659939,"results":"43","hashOfConfig":"31"},{"size":599,"mtime":1702911003096,"results":"44","hashOfConfig":"31"},{"size":801,"mtime":1702910938068,"results":"45","hashOfConfig":"31"},{"size":704,"mtime":1702919567217,"results":"46","hashOfConfig":"31"},{"size":897,"mtime":1702921772616,"results":"47","hashOfConfig":"31"},{"size":1177,"mtime":1702817510639,"results":"48","hashOfConfig":"31"},{"size":579,"mtime":1702909266091,"results":"49","hashOfConfig":"31"},{"size":294,"mtime":1702909236729,"results":"50","hashOfConfig":"31"},{"size":754,"mtime":1702807000298,"results":"51","hashOfConfig":"31"},{"size":768,"mtime":1702808479687,"results":"52","hashOfConfig":"31"},{"size":620,"mtime":1702900971522,"results":"53","hashOfConfig":"31"},{"size":671,"mtime":1702687520318,"results":"54","hashOfConfig":"31"},{"size":2672,"mtime":1702902355396,"results":"55","hashOfConfig":"31"},{"size":626,"mtime":1702822977911,"results":"56","hashOfConfig":"31"},{"size":556,"mtime":1702486605998,"results":"57","hashOfConfig":"31"},{"size":358,"mtime":1702487532348,"results":"58","hashOfConfig":"31"},{"size":231,"mtime":1702527628053,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"17c4s1o",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"63"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"63"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"63"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"63"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"63"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"140","usedDeprecatedRules":"63"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"63"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"/home/shivam/Desktop/netflix-gpt/src/index.js",[],[],["157"],"/home/shivam/Desktop/netflix-gpt/src/App.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/reportWebVitals.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/utils/appStore.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/Body.js",["158"],[],"import React from 'react';\nimport Browse from './Browse';\nimport Login from './Login';\nimport { RouterProvider, createBrowserRouter} from 'react-router-dom';\nimport { onAuthStateChanged } from 'firebase/auth';\n//import { useDispatch } from 'react-redux';\n//import { auth } from '../utils/Firebase';\n\nconst Body = () => {\n\n  //const dispatch = useDispatch();\n  //const navigate = useNavigate();\n\n  const appRoute = createBrowserRouter([\n     {\n       path:\"/\",\n       element:<Login/>\n     },\n     {\n      path:\"/Browse\",\n      element:<Browse/>\n     }\n  ])\n\n  return (\n    <div>\n        <RouterProvider router={appRoute}/>\n    </div>\n  )\n}\n\nexport default Body","/home/shivam/Desktop/netflix-gpt/src/utils/userSlice.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/Login.js",["159"],[],"import React, { useRef, useState } from 'react'\nimport Header from './Header'\nimport { CheckValidData } from '../utils/Validate'\nimport { createUserWithEmailAndPassword ,updateProfile, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from '../utils/Firebase';\n//import {useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { addUser } from '../utils/userSlice';\nimport { BG_URL, PHOTO_URL } from '../utils/constants';\n\nconst Login = () => {\n\n  const [SignInOut ,SetSignInOut] = useState(true);\n  const [ErrorMessage , setErrorMessage] = useState(null);\n  //const Navigate =useNavigate();\n  const dispatch = useDispatch(); \n  \n\n  const name = useRef(null);\n  const email = useRef(null);\n  const password =useRef(null);\n\n  \n      const ValidationCheck =()=>{\n      const message = CheckValidData(email.current.value , password.current.value);\n      setErrorMessage(message);\n      if (message) return ;\n\n      if(!SignInOut){\n        //SignUp Logic\n         createUserWithEmailAndPassword(auth, email.current.value , password.current.value )\n          .then((userCredential) => {\n          // Signed up \n          const user = userCredential.user;\n          updateProfile(user, {\n            displayName: name.current.value, photoURL: PHOTO_URL  // {PHOTO_URL } Not need to wrap  inside a curly bracket since its not a JSX... \n          }).then(() => {\n            // Profile updated!\n            // ...\n            const {uid, email , DisplayName,photoURL} = auth.currentUser;\n            dispatch(addUser({uid:uid , email:email ,DisplayName:DisplayName,photoURL:photoURL}))\n          }).catch((error) => {\n            // An error occurred\n            // ...\n            setErrorMessage(error.message)\n          });          \n          console.log(user);\n        //  Navigate('/Browse')\n\n          // ...\n        })\n        .catch((error) => {\n          const errorCode = error.code;\n          const errorMessage = error.message;\n           setErrorMessage(errorCode+\" \"+errorMessage)\n        });\n      }\n      else{\n        //SignIn Logic\n        signInWithEmailAndPassword(auth, email.current.value , password.current.value)\n        .then((userCredential) => {\n          // Signed in \n          const user = userCredential.user;\n          //console.log(user);\n         // Navigate('/Browse')\n\n          // ...\n        })\n        .catch((error) => {\n          const errorCode = error.code;\n          const errorMessage = error.message;\n          setErrorMessage(errorCode+\" \"+errorMessage)\n\n        });\n\n\n      }\n  }\n\n  const SignHandle =(e)=>{\n     e.preventDefault();\n     SetSignInOut(!SignInOut)\n  }\n  return (\n    <div>\n    <div >\n      <Header/>\n    </div>\n\n      <div className='absolute  '>\n        <img className=' h-screen md:h-full object-cover md: ' src={BG_URL} alt='logo'></img>\n      </div>\n\n      <form onClick={(e)=>e.preventDefault()} className=\"w-full md:w-72 mx-auto relative bg-gray-900 top-28 px-2 rounded-lg bg opacity-90\">\n\n          <h1 className='font-bold text-zinc-100   p-2 '>{SignInOut? \"SignIn\" : \"SignUp\"}</h1>\n          {\n            !SignInOut && (<input type='type' ref={name}  placeholder='Name' className='w-[95%] md:w-auto px-2 m-2 rounded-md bg-gray-100'/>)\n          }\n          <input type='text' ref={email} placeholder='Email or Phone number'  className='w-[95%] md:w-auto px-2 m-2 rounded-md bg-gray-100'  />\n          <input type='password' ref={password} placeholder='Password'  className=' w-[95%] md:w-auto px-2 m-2 rounded-md bg-gray-100 ' />\n          <p className=' px-2 m-2 text-red-600 text-sm'>{ErrorMessage}</p>\n          <button onClick={ValidationCheck}  className='w-[95%] md:w-[95%] px-2 m-2  rounded-md bg-rose-600  '>{SignInOut?\"Login\" : \"SignUp\"}</button>\n          <button className='text-slate-50  m-2 font-semibold text-sm cursor-pointer' onClick={SignHandle}> {SignInOut ? \"New to Netflix ? Sign up now.\" : \"Allready register ? SignIn Now.\"}</button>\n      </form>\n    </div>\n    \n  )\n}\n\nexport default Login ;","/home/shivam/Desktop/netflix-gpt/src/components/Browse.js",["160","161"],[],"import React, { useEffect } from 'react'\nimport Header from './Header'\n//import { API_MOVIES_OPTIONS } from '../utils/constants'\n//import { useDispatch } from 'react-redux'\n//import { addNowPlayingMovies } from '../utils/moviesSlice'\nimport useAddPlayingMovies from '../CustomHooks/useAddPlayingMovies.js'\nimport MainContainer from './MainContainer'\nimport SecondaryContainer from './SecondaryContainer'\nimport usePopularMovies from '../CustomHooks/usePopularMovies'\nimport GPT_Search from './GPT_Search.js'\nimport { useSelector } from 'react-redux'\n\nconst Browse = () => {\n  const ShowGptSearch = useSelector((store)=>store.gpt.ShowGptSearch);\n  useAddPlayingMovies();\n  usePopularMovies();\n\n  return (\n    <div>\n        <Header/>\n        {ShowGptSearch?<GPT_Search/> : (\n           <>\n             <MainContainer/>\n             <SecondaryContainer/>\n           </>\n        )}\n        \n    </div>\n  )\n}\n\nexport default Browse","/home/shivam/Desktop/netflix-gpt/src/utils/Firebase.js",["162"],[],"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth } from \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDLVpHokt2z4KHmCQ8m2rw0gAKm4IFGbns\",\n  authDomain: \"netflix-2f3b5.firebaseapp.com\",\n  projectId: \"netflix-2f3b5\",\n  storageBucket: \"netflix-2f3b5.appspot.com\",\n  messagingSenderId: \"123330806823\",\n  appId: \"1:123330806823:web:37ad447c0fd2a88e037a02\",\n  measurementId: \"G-LDYCN5ZBTP\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nexport const auth =getAuth();","/home/shivam/Desktop/netflix-gpt/src/components/Header.js",["163","164"],[],"/home/shivam/Desktop/netflix-gpt/src/utils/Validate.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/utils/constants.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/utils/moviesSlice.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/MainContainer.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/SecondaryContainer.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/VideoTitle.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/VideoBackground.js",["165","166","167"],[],"/home/shivam/Desktop/netflix-gpt/src/CustomHooks/useTrailerVideo.js",["168","169"],[],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTrailerVideo } from '../utils/moviesSlice';\nimport { API_MOVIES_OPTIONS } from '../utils/constants';\n\nconst useTrailerVideo = (movie_id) => {\n    \n  //const { trailerId , setTrailerId} = useState(null);\n  const dispatch = useDispatch();\n  const moviesTrailer = useSelector((store)=>store.movies.trailerVideo)\n\n  // fetch  trailer video and update the redux store \n  const getMovieVideoTrailer = async()=>{\n     const data = await fetch('https://api.themoviedb.org/3/movie/'+ movie_id + '/videos?language=en-US', API_MOVIES_OPTIONS);\n     const json = await data.json();\n     console.log(json);\n  //dispatch(addNowPlayingMovies(json.results))\n     const filterData = json.results.filter((video)=>video.type===\"Trailer\");\n     const trailer = filterData.length ? filterData[0] : json.results[0];\n     console.log(trailer);\n    // setTrailerId(trailer.key);\n     //use trailerId in API instead trailerVideo.key\n     dispatch(addTrailerVideo(trailer))\n    \n   }\n \n   useEffect(()=>{\n    !moviesTrailer && getMovieVideoTrailer();\n   },[])\n}\n\nexport default useTrailerVideo","/home/shivam/Desktop/netflix-gpt/src/components/MovieList.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/components/MovieCard.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/CustomHooks/usePopularMovies.js",["170"],[],"import { useDispatch, useSelector } from \"react-redux\";\nimport { API_MOVIES_OPTIONS } from \"../utils/constants\";\nimport { addPopularMovies} from \"../utils/moviesSlice\";\nimport { useEffect } from \"react\";\n\nconst usePopularMovies=()=>{\n  const dispatch = useDispatch();\n  const moviesPopular = useSelector((store)=>store.movies.PopularMovies)\n\n  // fetch data from tmdb and update store\n  const getmoviesPopular = async()=>{\n    const data = await fetch(\"https://api.themoviedb.org/3/movie/upcoming?language=en-US&page=1\",API_MOVIES_OPTIONS)\n    const json = await data.json();\n    console.log(json);\n    dispatch(addPopularMovies(json.results))\n  }\n\n  useEffect(()=>{\n    !moviesPopular && getmoviesPopular();\n  },[])\n};\n\nexport default  usePopularMovies;","/home/shivam/Desktop/netflix-gpt/src/CustomHooks/useAddPlayingMovies.js",["171"],[],"import { useDispatch, useSelector } from \"react-redux\";\nimport { API_MOVIES_OPTIONS } from \"../utils/constants\";\nimport { addNowPlayingMovies } from \"../utils/moviesSlice\";\nimport { useEffect } from \"react\";\n\nconst useAddPlayingMovies=()=>{\n  const dispatch = useDispatch();\n  const moviesPlaying = useSelector((store)=>store.movies.PlayingMovies)\n  // fetch data from tmdb and update store\n  const getmoviesPlaying = async()=>{\n    const data = await fetch(\"https://api.themoviedb.org/3/movie/now_playing?language=en-US&page=1\",API_MOVIES_OPTIONS)\n    const json = await data.json();\n    console.log(json);\n    dispatch(addNowPlayingMovies(json.results))\n  }\n\n  useEffect(()=>{\n   !moviesPlaying && getmoviesPlaying();\n  },[])\n};\n\nexport default  useAddPlayingMovies;","/home/shivam/Desktop/netflix-gpt/src/components/GPT_Search.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/utils/gptSearch.js",["172"],[],"import { createSlice } from \"@reduxjs/toolkit\";\n\nconst gptSlice = createSlice({\n    name:'gpt',\n    initialState:{\n        ShowGptSearch : false ,\n        gptMoviesList : null ,\n        tmdbResults : null ,\n    },\n    reducers:{\n        toggleGptSearch :(state,action)=>{\n            state.ShowGptSearch = !state.ShowGptSearch ;\n        },\n        addGptMovieResults:(state,action)=>{\n            const {tmdbResults , gptMoviesList } = action. payload\n            state.tmdbResults = tmdbResults;\n            state.gptMoviesList =gptMoviesList ;\n\n        }\n    }\n})\n\nexport default gptSlice.reducer ;\nexport const{toggleGptSearch, addGptMovieResults} = gptSlice.actions ;","/home/shivam/Desktop/netflix-gpt/src/components/GptSearchBar.js",["173"],[],"import React, { useRef } from 'react';\nimport { lang } from '../utils/constantLanguage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport openai from '../utils/openai';\nimport MovieList from './MovieList';\nimport { API_MOVIES_OPTIONS } from '../utils/constants';\nimport { addGptMovieResults } from '../utils/gptSearch';\n\nconst GptSearchBar = () => {\n  \n  const dispatch = useDispatch();\n  const searchText = useRef(null);\n  const lang_key = useSelector((store)=>store.config.lang) ;\n\n  const searchMovieTMDB = async(movie)=>{\n    const data = await fetch(\"https://api.themoviedb.org/3/search/movie?query=\"+movie+\"&include_adult=false&language=en-US&page=1\",API_MOVIES_OPTIONS);\n    const json = await data.json();\n    return json ;\n  }\n\n  const handleGptSearchSubmit=async()=>{\n      console.log(searchText.current.value);\n      //make an api call to gpt api and get movie results  \n\n      const gptQuery = \"Act as a movie recommendation system and suggest sone movies for the uery\"+\n              searchText.current.value +\n              \"only give me name of 5 movies with separated by commas(,) like don , dhammal , ravan , sholay , gadar\"\n\n      const openaiResults = await openai.chat.completions.create({\n        messages: [{ role: 'user', content: gptQuery }],\n        model: 'gpt-3.5-turbo',\n      })\n      if(!openaiResults.choices){\n         //error handling page\n      }\n     // console.log(openaiResults.choices?.[0]?.message?.content);\n      const gptMoviesList= openaiResults.choices?.[0]?.message?.content.split(\",\")\n      // now results - [\"sultan\",\"bajangi\",etc upto 5 movies]\n      console.log(gptMoviesList)\n\n      const promiseArray = gptMoviesList.map((movie)=>searchMovieTMDB(movie)) ;\n      //[promise, promise , promise , promise , promise]\n      console.log(promiseArray)\n\n      const tmdbResults = await Promise.all(promiseArray);\n      console.log(tmdbResults);\n\n      dispatch(addGptMovieResults({tmdbResults:tmdbResults , gptMoviesList:gptMoviesList}))\n\n  }\n \n  return (\n    <div className='flex justify-center '>\n        <form className='mt-16 w-full md:w-1/2  grid grid-cols-12 bg-slate-900 p-1 rounded-lg' \n        onSubmit={(e)=>e.preventDefault()}\n         >\n            <input \n            ref={searchText}\n            type='text' \n            className=' p-2 mx-1 my-2  col-span-9  text-sm bg-sky-300 rounded-lg placeholder-black'\n             placeholder={lang[lang_key].searchPlaceholder}\n             />\n            <button className='p-1 my-2 bg-red-600  col-span-3 rounded-lg ' \n            onClick={handleGptSearchSubmit}>{lang[lang_key].search}</button>\n        </form>\n    </div>\n  )\n}\n\nexport default GptSearchBar","/home/shivam/Desktop/netflix-gpt/src/components/GptMovieSuggestion.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/utils/constantLanguage.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/utils/configSlice.js",[],[],"/home/shivam/Desktop/netflix-gpt/src/utils/openai.js",[],[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":5,"column":10,"nodeType":"178","messageId":"179","endLine":5,"endColumn":28},{"ruleId":"176","severity":1,"message":"180","line":63,"column":17,"nodeType":"178","messageId":"179","endLine":63,"endColumn":21},{"ruleId":"176","severity":1,"message":"181","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":26},{"ruleId":"182","severity":1,"message":"183","line":21,"column":24,"nodeType":"184","messageId":"185","endLine":21,"endColumn":37},{"ruleId":"176","severity":1,"message":"186","line":22,"column":7,"nodeType":"178","messageId":"179","endLine":22,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":45,"column":5,"nodeType":"189","endLine":45,"endColumn":7,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":78,"column":11,"nodeType":"184","endLine":78,"endColumn":108},{"ruleId":"176","severity":1,"message":"193","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":25},{"ruleId":"176","severity":1,"message":"194","line":3,"column":10,"nodeType":"178","messageId":"179","endLine":3,"endColumn":28},{"ruleId":"176","severity":1,"message":"195","line":4,"column":10,"nodeType":"178","messageId":"179","endLine":4,"endColumn":21},{"ruleId":"176","severity":1,"message":"196","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"187","severity":1,"message":"197","line":29,"column":6,"nodeType":"189","endLine":29,"endColumn":8,"suggestions":"198"},{"ruleId":"187","severity":1,"message":"199","line":20,"column":5,"nodeType":"189","endLine":20,"endColumn":7,"suggestions":"200"},{"ruleId":"187","severity":1,"message":"201","line":19,"column":5,"nodeType":"189","endLine":19,"endColumn":7,"suggestions":"202"},{"ruleId":"203","severity":1,"message":"204","line":15,"column":52,"nodeType":"205","messageId":"206","endLine":15,"endColumn":67,"fix":"207"},{"ruleId":"176","severity":1,"message":"208","line":5,"column":8,"nodeType":"178","messageId":"179","endLine":5,"endColumn":17},"no-new-object",["209"],"no-unused-vars","'onAuthStateChanged' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'useEffect' is defined but never used.","react/jsx-pascal-case","Imported JSX component GPT_Search must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'analytics' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["210"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useState' is defined but never used.","'API_MOVIES_OPTIONS' is defined but never used.","'useDispatch' is defined but never used.","'React' is defined but never used.","React Hook useEffect has missing dependencies: 'getMovieVideoTrailer' and 'moviesTrailer'. Either include them or remove the dependency array.",["211"],"React Hook useEffect has missing dependencies: 'getmoviesPopular' and 'moviesPopular'. Either include them or remove the dependency array.",["212"],"React Hook useEffect has missing dependencies: 'getmoviesPlaying' and 'moviesPlaying'. Either include them or remove the dependency array.",["213"],"no-whitespace-before-property","Unexpected whitespace before property payload.","MemberExpression","unexpectedWhitespace",{"range":"214","text":"215"},"'MovieList' is defined but never used.","no-object-constructor",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},[442,444],".","Update the dependencies array to be: [dispatch, navigate]",{"range":"224","text":"225"},"Update the dependencies array to be: [getMovieVideoTrailer, moviesTrailer]",{"range":"226","text":"227"},"Update the dependencies array to be: [getmoviesPopular, moviesPopular]",{"range":"228","text":"229"},"Update the dependencies array to be: [getmoviesPlaying, moviesPlaying]",{"range":"230","text":"231"},[1431,1433],"[dispatch, navigate]",[1140,1142],"[getMovieVideoTrailer, moviesTrailer]",[713,715],"[getmoviesPopular, moviesPopular]",[724,726],"[getmoviesPlaying, moviesPlaying]"]